/mnt/b/Informatique/Travaux/RareSkills/Solidity-Bootcamp/Code/Week4/day2/exercise2/mysolution.sol
  1 |     | pragma solidity ^0.4.21;
  2 |     | 
  3 |     | //import "./token-sale-modified.sol";
  4 |     | import "./token-sale.sol";
  5 | *r  | 
  6 |     | contract ZigturTestTokenSale is TokenSaleChallenge {
  7 |     |     function ZigturTestTokenSale() public payable TokenSaleChallenge(msg.sender) {
  8 |     |     }
  9 |     | 
 10 |     |     // add the property
 11 |     |     function echidna_test_balance() public view returns (bool) {
 12 |     |         return isComplete();
 13 |     |     }
 14 |     | }

/mnt/b/Informatique/Travaux/RareSkills/Solidity-Bootcamp/Code/Week4/day2/exercise2/token-sale.sol
  1 |     | pragma solidity ^0.4.21;
  2 |     | 
  3 |     | contract TokenSaleChallenge {
  4 | *   |     mapping(address => uint256) public balanceOf;
  5 | *r  |     uint256 constant PRICE_PER_TOKEN = 1 ether;
  6 |     | 
  7 |     |     function TokenSaleChallenge(address _player) public payable {
  8 |     |         //require(msg.value == 1 ether);
  9 |     |     }
 10 |     | 
 11 |     |     function isComplete() public view returns (bool) {
 12 |     |         return address(this).balance < 1 ether;
 13 |     |     }
 14 |     | 
 15 |     |     /*function buy(uint256 numTokens) public payable {
 16 |     |         require(msg.value == numTokens * PRICE_PER_TOKEN);
 17 |     | 
 18 |     |         balanceOf[msg.sender] += numTokens;
 19 |     |     }*/
 20 | *r  |     function buy(uint256 numTokens) public payable {
 21 | *r  |         require(numTokens * PRICE_PER_TOKEN < PRICE_PER_TOKEN);
 22 |     |         //require(msg.value == numTokens * PRICE_PER_TOKEN);
 23 |     | 
 24 | *   |         balanceOf[msg.sender] += numTokens;
 25 | *   |         msg.sender.transfer(PRICE_PER_TOKEN);
 26 |     |     }
 27 |     | 
 28 | *r  |     function sell(uint256 numTokens) public {
 29 | *r  |         require(balanceOf[msg.sender] >= numTokens);
 30 |     | 
 31 | *   |         balanceOf[msg.sender] -= numTokens;
 32 | *   |         msg.sender.transfer(numTokens * PRICE_PER_TOKEN);
 33 |     |     }
 34 |     | }

